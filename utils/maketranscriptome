#! /usr/bin/env bash
<<DOC
given refFlat, fastas directory, and read length, generate a transcriptome.
DOC

set -o nounset -o errexit

function usage () {
    echo "Check your args. This script submits to the normal queue.
         "
    echo "Usage: sh $0 <FASTAS_DIR> <REFFLAT> <READ_LENGTH>"
    echo "Example: sh $0 ~/ref/hg19/fa_per_chr ~/ref/hg19/refFlat_hg19_ensembl.txt.gz 100"
    exit 1
}

# if the number of arguments is less than 3, run usage and exit with non-zero
if [ $# -lt 3 ]; then
    usage
fi

fastas=$1

# fastas should be a directory, so send a message to the user and exit if 
# supplied with something else
if [ ! -d $fastas ]; then
    echo ">> Fasta referenced was not a directory.\n"
    usage
fi

refflat=$2
# errors out with non-numeric argument
# this should be fixed to catch the error and send a message to the user
read_length=$(expr $3 - 4 )

runscript=maketranscriptome.sh

# write script to submit to queue
cat <<runscript >${runscript}
#BSUB -J maketranscriptome
#BSUB -e maketranscriptome.%J.err
#BSUB -o maketranscriptome.%J.out
#BSUB -R "select[mem>24] rusage[mem=24] span[hosts=1]"

java -jar -Xmx22G /vol1/home/brownj/opt/useq/Apps/MakeTranscriptome -f $fastas -u $refflat -r $read_length
runscript

# submit job to queue and capture output
job=$(bsub < $runscript)
# parse the output using sed to capture only the digits of the job id
jobid=$(echo $job | sed -rn 's/.*<([0-9]+)>.*/\1/p')

# rename the script using the job id
mv maketranscriptome.sh maketranscriptome.$jobid.sh
# echo the job's id to the user
echo $jobid